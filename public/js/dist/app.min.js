!function(){var a=angular.module("app",["ngRoute","APIServices","constants","filters","services","controllers","directives"]);angular.module("APIServices",[]),angular.module("constants",[]),angular.module("filters",[]),angular.module("services",[]),angular.module("controllers",[]),angular.module("directives",[]),a.controller("MainCtrl",["$scope",function(a){}]),a.config(["$routeProvider","$locationProvider",function(a,b){b.html5Mode({enabled:!0,requireBase:!1}),a.when("/",{templateUrl:"/js/app/htmlTemplates/movieListTemplate.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}])}(),function(){var a=angular.module("APIServices");a.factory("movieAPIServices",["$http","$q","routingConstants",function(a,b,c){var d=function(d,e,f){var g=b.defer(),h={};return h.list=d,h.page=e,h.q=f,a.get(c.moviesAPI,{params:h}).success(function(a,b,c,e,f){if(a){if(d&&d>0&&a.movies&&a.movies.length){d=a.movies.length<d?a.movies.length:d;for(var h=[],i=0;d>i;i++)h.push(a.movies[i]);a.movies=h}}else console.warn("Error in movieAPIServices _getAllMovies");g.resolve(a)}).error(function(a,b,c,d,e){404===b?(console.warn("No movies found."),g.reject(a,b)):(console.warn("Error in movieAPIServices _getAllMovies"),g.reject(a))}),g.promise};return{getAllMovies:d}}])}(),function(){var a=angular.module("constants");a.constant("routingConstants",{url:"http://localhost",port:"8000",moviesAPI:"/api/movies"}),a.constant("commonConstants",{numberMoviesPageLoad:20})}(),function(){var a=angular.module("filters");a.filter("filterActors",["validationServices",function(a){return function(b){if(a.isObject(b)&&a.isArray(b.list)){for(var c="",d=0;d<b.list.length;d++)c+=d<b.list.length-1?b.list[d].name+", ":b.list[d].name;return c}return""}}]),a.filter("filterDuration",["validationServices",function(a){return function(b){if(a.isNumeric(b)){b=parseInt(b);var c=b/60;return c}return b}}])}(),function(){var a=angular.module("services");a.factory("movieModelServices",["$q","movieAPIServices","validationServices",function(a,b,c){var d=null,e=function(e,f,g,h){var i=a.defer();if(h&&d)i.resolve(d.movies);else{var j=c.validateInput(e,f);e=j.numberOfItemsToReturn,f=j.pageNumber,b.getAllMovies(e,f,g).then(function(a){a?(d=a,i.resolve(a)):console.warn("Error in movieModelServices _getAllMovies")},function(a,b){i.reject(a)})}return i.promise};return{getAllMovies:e}}])}(),function(){var a=angular.module("services");a.factory("validationServices",[function(){var a=function(a){return!isNaN(parseFloat(a))&&isFinite(a)},b=function(a){return null!==a&&"object"==typeof a},c=function(a){return a&&a.constructor===Array},d=function(a){var b={};return a&&"[object Function]"===b.toString.call(a)},e=function(b,c){if(void 0!==b&&!a(b))throw console.log(b),"Please provide valid integer for number of items to return.";if(b=1>b||void 0===b?1:b,b=parseInt(b),void 0!==c&&!a(c))throw console.log(c),"Please provide valid integer for page number.";return c=1>c||void 0===c?1:c,c=parseInt(c),{pageNumber:c,numberOfItemsToReturn:b}};return{validateInput:e,isNumeric:a,isFunction:d,isArray:c,isObject:b}}])}(),function(){var a=angular.module("controllers");a.controller("movieListCtrl",["$scope","movieModelServices","commonConstants","validationServices",function(a,b,c,d){self=this,self.scope=a,a.movieList=[],a.searchPhrase="",a.pagination={},a.list=20,a.currentPage=1,a.finalPage=1,a.totalfilteredMovies=0,a.totalMoviesCount=0,a.nextcallback=function(){self.scope.currentPage++}.bind(self),a.previouscallback=function(){self.scope.currentPage--}.bind(self);var e=!1;!function(){b.getAllMovies(c.numberMoviesPageLoad).then(function(b){a.movieList=b.movies,a.list=c.numberMoviesPageLoad,a.totalfilteredMovies=b.totalMoviesCount,a.totalMoviesCount=b.totalMoviesCount,a.finalPage=Math.ceil(b.totalMoviesCount/a.list)})}();var f=function(c,d,f,g){(a.searchPhrase.length>2||""===a.searchPhrase)&&b.getAllMovies(c,d,f).then(function(b){a.errorMessage&&(a.errorMessage=""),a.movieList=b.movies,a.totalMoviesCount=b.totalMoviesCount,f?(a.finalPage=Math.ceil(b.totalfilteredMovies/a.list),a.totalfilteredMovies=b.totalfilteredMovies):(a.totalfilteredMovies=b.totalMoviesCount,a.finalPage=Math.ceil(b.totalMoviesCount/a.list)),a.totalfilteredMovies<a.list&&(e=!0,a.list=a.totalfilteredMovies)},function(b){requestSent=!1,b.errorMessage&&(a.errorMessage=b.errorMessage,a.movieList=[])})};a.$watch("searchPhrase",function(b,d){d&&d.length&&d.length>0&&0===b.length&&(a.list=c.numberMoviesPageLoad),d!==b&&f(a.list,a.currentPage,b,!1,"search")}),a.$watch("list",function(b,c){1>b&&(a.list=1),a.searchPhrase&&a.searchPhrase.length&&a.searchPhrase.length>2&&a.list>a.totalfilteredMovies&&a.totalfilteredMovies>0&&(a.list=a.totalfilteredMovies),c===b||e?e=!1:f(b,a.currentPage,a.searchPhrase,!1,"list")}),a.$watch("currentPage",function(b,c){return d.isNumeric(b)?1>b?void(a.currentPage=1):a.finalPage<b?void(a.currentPage=a.finalPage):void(c!==b&&f(a.list,b,a.searchPhrase,!1,"currentPage")):void(a.currentPage=1)}),a.$watch("finalPage",function(b,c){b<a.currentPage&&(a.currentPage=b)})}])}(),function(){var a=angular.module("directives");a.directive("movieList",function(){return{restrict:"E",transclude:!0,controller:"movieListCtrl",link:function(a,b,c){},templateUrl:"js/app/modules/movieList/movieListView.html"}})}(),function(){var a=angular.module("controllers");a.controller("paginationCtrl",["$scope","paginationService",function(a,b){a.$watch("finalPage",function(c,d){a.pagination=b.Pagination(a.finalPage,a.currentPage,a.nextcallback,a.previouscallback)}),a.$watch("currentPage",function(c,d){a.pagination=b.Pagination(a.finalPage,a.currentPage,a.nextcallback,a.previouscallback)})}])}(),function(){var a=angular.module("directives");a.directive("paginationDir",[function(){return{restrict:"E",transclude:!0,controller:"paginationCtrl",scope:{nextcallback:"&",previouscallback:"&",finalPage:"=finalpage",currentPage:"=currentpage"},link:function(a,b,c){if(!c.nextcallback||!c.previouscallback)throw"You must provide nextcallback and previouscallback for pagination service"},templateUrl:"js/app/modules/pagination/paginationView.html"}}])}(),function(){var a=angular.module("services");a.factory("paginationService",["validationServices",function(a){var b=function(b,c,d,e){var f=b,g=c;this.nextcallback=d,this.previouscallback=e,this.max=function(){return f},this.current=function(){return g},this.next=function(){if(this.hasNext()){if(g++,!a.isFunction(d))throw"Please provide a next callback function";d()}},this.previous=function(){if(this.hasPrevious()){if(g--,!a.isFunction(this.previouscallback))throw"Please provide a previous callback function";this.previouscallback()}},this.hasPrevious=function(){return g>1},this.hasNext=function(){return f>g}};return{Pagination:function(a,c,d,e){return new b(a,c,d,e)}}}])}();var app=app||{};app.Controllers=angular.module("app.constants",["constants"]),app.Services=angular.module("app.services",["APIServices","services"]),app.Filters=angular.module("app.filters",["filters"]),app.Controllers=angular.module("app.controllers",["controllers"]),app.Directives=angular.module("app.directives",["directives"]),app.Tests=angular.module("app.tests",["templates"]),app.Dependencies=Neosavvy.AngularCore.Dependencies.concat(["app.constants","app.services","app.filters","app.controllers","app.directives","app.tests"]);